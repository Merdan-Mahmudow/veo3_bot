"""empty message

Revision ID: 18c502ea2eac
Revises: 112884a08de7
Create Date: 2025-10-05 22:37:58.039510

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '18c502ea2eac'
down_revision: Union[str, Sequence[str], None] = '112884a08de7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('referral_links',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('link_type', sa.Enum('USER', 'PARTNER', name='referrallinktype'), nullable=False),
    sa.Column('percent', sa.Integer(), nullable=True),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.String(), nullable=False),
    sa.Column('chat_id', sa.String(), nullable=False),
    sa.Column('raw', sa.Text(), nullable=True),
    sa.Column('is_video', sa.Boolean(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_id')
    )
    op.create_table('audit_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('actor_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('entity', sa.String(), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('payload_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('partner_balances',
    sa.Column('partner_id', sa.UUID(), nullable=False),
    sa.Column('balance_minor', sa.Integer(), nullable=False),
    sa.Column('hold_minor', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['partner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('partner_id')
    )
    op.create_table('payout_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('partner_id', sa.UUID(), nullable=False),
    sa.Column('amount_minor', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('REQUESTED', 'APPROVED', 'REJECTED', 'PAID', name='payoutstatus'), nullable=False),
    sa.Column('requisites_json', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default='now()', nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['partner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchases',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('amount_minor', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('is_first_for_user', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('referrals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('new_user_id', sa.UUID(), nullable=False),
    sa.Column('referrer_type', sa.Enum('user', 'partner', name='referrertype'), nullable=False),
    sa.Column('referrer_id', sa.UUID(), nullable=False),
    sa.Column('ref_link_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['new_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['ref_link_id'], ['referral_links.id'], ),
    sa.ForeignKeyConstraint(['referrer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('new_user_id')
    )
    op.create_table('coin_bonus_ledger',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('giver_id', sa.UUID(), nullable=False),
    sa.Column('receiver_id', sa.UUID(), nullable=False),
    sa.Column('purchase_id', sa.UUID(), nullable=False),
    sa.Column('coins', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['giver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('partner_commission_ledger',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('partner_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('purchase_id', sa.UUID(), nullable=False),
    sa.Column('ref_link_id', sa.UUID(), nullable=False),
    sa.Column('base_amount_minor', sa.Integer(), nullable=False),
    sa.Column('percent', sa.Integer(), nullable=False),
    sa.Column('commission_minor', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['partner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], ),
    sa.ForeignKeyConstraint(['ref_link_id'], ['referral_links.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('purchase_id')
    )
    op.add_column('users', sa.Column('referrer_id', sa.UUID(), nullable=True))
    op.add_column('users', sa.Column('ref_link_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'users', 'referral_links', ['ref_link_id'], ['id'])
    op.create_foreign_key(None, 'users', 'users', ['referrer_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'ref_link_id')
    op.drop_column('users', 'referrer_id')
    op.drop_table('partner_commission_ledger')
    op.drop_table('coin_bonus_ledger')
    op.drop_table('referrals')
    op.drop_table('purchases')
    op.drop_table('payout_requests')
    op.drop_table('partner_balances')
    op.drop_table('audit_log')
    op.drop_table('tasks')
    op.drop_table('referral_links')
    # ### end Alembic commands ###
